<H1>PROBLEM</H1>
Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

Example 1:

Input: nums = [1,2,3,1]
Output: true
Example 2:

Input: nums = [1,2,3,4]
Output: false
Example 3:

Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109

------SOLUCTION--------JAVA
To solve this problem, you can use a hash set to store the values that you have seen so far.
You can then iterate through the array and check if the current value is already in the hash set. If it is,
you can return true because the value appears at least twice in the array. If it is not,
you can add the value to the hash set and continue to the next value. 
If you finish iterating through the array and have not found any repeating values,
you can return false because every element is distinct.

----code---soluction--in--JAVA
class Solution {
     public boolean containsDuplicate(int[] nums) {
    Set<Integer> values = new HashSet<>();
    for (int num : nums) {
      if (values.contains(num)) {
        return true;
      }
      values.add(num);
    }
    return false;
  }
}
---------------------------------------------
